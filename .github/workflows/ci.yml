# Melody Generator CI
# This workflow performs linting and unit tests using multiple versions of
# Python. A previous "test.yml" workflow duplicated this behavior. Both have now
# been consolidated here to reduce redundancy and simplify maintenance.
#
# Steps:
#   1. Checkout repository source.
#   2. Install Python for each matrix entry.
#   3. Install project and test dependencies.
#   4. Run Ruff for style checks.
#   5. Execute pytest for the test suite.

name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.11"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          # Upgrade pip to avoid resolution issues with optional dependencies
          python -m pip install --upgrade pip
          # Install project in editable mode along with tools and optional packages
          # Explicitly listing pyfluidsynth and numpy ensures the CI environment
          # mirrors a local developer setup where these are available.
          pip install -e . ruff pytest pyfluidsynth numpy

      - name: Run Ruff
        run: ruff check .

      - name: Run tests
        run: pytest -q
